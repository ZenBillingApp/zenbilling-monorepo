name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Détecter les changements
  changes:
    runs-on: ubuntu-latest
    outputs:
      shared: ${{ steps.changes.outputs.shared }}
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            shared:
              - 'packages/shared/**'
            services:
              - 'packages/ai_service/**'
              - 'packages/auth_service/**'
              - 'packages/company_service/**'
              - 'packages/customer_service/**'
              - 'packages/dashboard_service/**'
              - 'packages/email_service/**'
              - 'packages/invoice_service/**'
              - 'packages/pdf_service/**'
              - 'packages/product_service/**'
              - 'packages/quote_service/**'
              - 'packages/stripe_service/**'

  # Tests unitaires et d'intégration
  unit-tests:
    needs: changes
    if: needs.changes.outputs.shared == 'true' || needs.changes.outputs.services == 'true'
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: 
          - ai_service
          - auth_service
          - company_service
          - customer_service
          - dashboard_service
          - email_service
          - invoice_service
          - pdf_service
          - product_service
          - quote_service
          - stripe_service
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci
      
      - name: Install and build shared package
        run: |
          cd packages/shared
          npm install
          npm run build || npm run tsc || echo "No build script for shared"
      
      - name: Install service dependencies
        run: |
          cd packages/${{ matrix.service }}
          npm install
      
      - name: Run tests
        run: |
          cd packages/${{ matrix.service }}
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No tests available for ${{ matrix.service }}"
          fi
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

  # Analyse de qualité du code
  code-quality:
    needs: changes
    if: needs.changes.outputs.shared == 'true' || needs.changes.outputs.services == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npx lerna bootstrap || npm install
      
      - name: Build shared package
        run: |
          cd packages/shared
          npm install
          npm run build || npm run tsc || echo "No build script for shared"
      
      - name: TypeScript compilation check
        run: |
          for service in packages/*/; do
            if [[ -f "$service/tsconfig.json" ]]; then
              echo "Checking TypeScript compilation for $(basename $service)"
              cd $service
              if npm run | grep -q "build"; then
                npm run build
              elif command -v tsc &> /dev/null; then
                npx tsc --noEmit
              else
                echo "No TypeScript compilation check available for $(basename $service)"
              fi
              cd ../..
            fi
          done

  # Tests d'intégration globaux
  integration-tests:
    needs: [changes, unit-tests]
    if: needs.changes.outputs.shared == 'true' || needs.changes.outputs.services == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npx lerna bootstrap || npm install
      
      - name: Setup test environment
        run: |
          # Build shared package
          cd packages/shared
          npm install
          npm run build || npm run tsc || echo "No build script for shared"
          cd ../..
          
          # Build all services
          npm run build || echo "Build completed with some warnings"
      
      - name: Run integration tests
        run: |
          # Exécuter les tests d'intégration pour les services qui en ont
          for service in packages/*/; do
            if [[ -d "$service/tests/integration" ]]; then
              echo "Running integration tests for $(basename $service)"
              cd $service
              npm test -- --testPathPattern=integration || echo "Integration tests failed for $(basename $service)"
              cd ../..
            fi
          done
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379