version: "3.8"

services:
    # Base de donn√©es PostgreSQL
    postgres:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: zenbilling
            POSTGRES_USER: zenbilling
            POSTGRES_PASSWORD: zenbilling_password
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U zenbilling"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis pour les sessions et cache
    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    # API Gateway
    api_gateway:
        build:
            context: ./packages/api_gateway
            dockerfile: packages/api_gateway/Dockerfile
        ports:
            - "8080:8080"
        environment:
            - NODE_ENV=production
        depends_on:
            - auth_service
            - company_service
            - stripe_service
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:8080/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Auth Service
    auth_service:
        build:
            context: ./packages/auth_service
            dockerfile: packages/auth_service/Dockerfile
        ports:
            - "3001:3001"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - BETTER_AUTH_SECRET=your-auth-secret-key-here
            - BETTER_AUTH_URL=http://localhost:3001
            - CLIENT_URL=http://localhost:3000
            - CLIENT_URL_2=http://localhost:8080
            - PORT=3001
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3001/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Company Service
    company_service:
        build:
            context: ./packages/company_service
            dockerfile: packages/company_service/Dockerfile
        ports:
            - "3002:3002"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3002
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3002/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Stripe Service
    stripe_service:
        build:
            context: ./packages/stripe_service
            dockerfile: packages/stripe_service/Dockerfile
        ports:
            - "3003:3003"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
            - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
            - PORT=3003
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3003/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Dashboard Service
    dashboard_service:
        build:
            context: ./packages/dashboard_service
            dockerfile: packages/dashboard_service/Dockerfile
        ports:
            - "3004:3004"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3004
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3004/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Invoice Service
    invoice_service:
        build:
            context: ./packages/invoice_service
            dockerfile: packages/invoice_service/Dockerfile
        ports:
            - "3005:3005"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3005
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3005/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Quote Service
    quote_service:
        build:
            context: ./packages/quote_service
            dockerfile: packages/quote_service/Dockerfile
        ports:
            - "3006:3006"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3006
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3006/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Email Service
    email_service:
        build:
            context: ./packages/email_service
            dockerfile: packages/email_service/Dockerfile
        ports:
            - "3007:3007"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - SMTP_USER=${SMTP_USER}
            - SMTP_PASS=${SMTP_PASS}
            - PORT=3007
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3007/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Product Service
    product_service:
        build:
            context: ./packages/product_service
            dockerfile: packages/product_service/Dockerfile
        ports:
            - "3008:3008"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3008
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3008/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # Customer Service
    customer_service:
        build:
            context: ./packages/customer_service
            dockerfile: packages/customer_service/Dockerfile
        ports:
            - "3009:3009"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3009
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3009/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # PDF Service
    pdf_service:
        build:
            context: ./packages/pdf_service
            dockerfile: packages/pdf_service/Dockerfile
        ports:
            - "3010:3010"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - PORT=3010
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3010/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    # AI Service
    ai_service:
        build:
            context: ./packages/ai_service
            dockerfile: packages/ai_service/Dockerfile
        ports:
            - "3011:3011"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://zenbilling:zenbilling_password@postgres:5432/zenbilling
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - PORT=3011
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3011/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    postgres_data:
    redis_data:
